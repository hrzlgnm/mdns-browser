name: "Reusable android workflow"

on:
  workflow_call:
    inputs:
      release:
        required: false
        type: boolean
    secrets:
      ANDROID_RELEASE_KEYSTORE:
        required: false
      ANDROID_RELEASE_KEYSTORE_PASSWORD:
        required: false
      ANDROID_RELEASE_KEY:
        required: false
      ANDROID_RELEASE_KEY_PASSWORD:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Setup Java
        uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@00854ea68c109d98c75d956347303bf7c45b0277 # v3

      - name: Install NDK
        run: sdkmanager "ndk;27.0.11902837"

      - name: Install rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android,wasm32-unknown-unknown

      - name: Cached install trunk
        uses: taiki-e/cache-cargo-install-action@caa6f48d18d42462f9c30df89e2b4f71a42b7c2c # v2.0.1
        with:
          tool: trunk@0.20.3
          locked: true

      - name: Cached install cargo-auditable
        uses: taiki-e/cache-cargo-install-action@caa6f48d18d42462f9c30df89e2b4f71a42b7c2c # v2.0.1
        with:
          tool: cargo-auditable@0.6.4
          locked: true

      - name: Cached install tauri-cli
        uses: taiki-e/cache-cargo-install-action@caa6f48d18d42462f9c30df89e2b4f71a42b7c2c # v2.0.1
        with:
          tool: tauri-cli@2.0.0
          locked: true

      - name: Build app bundle
        run: |
          cargo --locked auditable tauri android init
          cargo --locked auditable tauri android build -v
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837

      - name: Get version from tauri.android.conf.json (publish only)
        if: inputs.release
        id: get-version
        run: |
          CURRENT_VERSION=$(jq -r '.version' src-tauri/tauri.android.conf.json)
          echo "current_version=$CURRENT_VERSION" >> "$GITHUB_ENV"

      - name: Extract android signing key from env (publish only)
        if: inputs.release
        run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > src-tauri/gen/android/release.jks.base64
          base64 -d src-tauri/gen/android/release.jks.base64 > src-tauri/gen/android/release.decrypted.jks

      - name: Sign APK (publish only)
        if: inputs.release
        run: |
          ${{ env.ANDROID_HOME }}/build-tools/34.0.0/apksigner sign --ks src-tauri/gen/android/release.decrypted.jks \
            --ks-key-alias ${{ secrets.ANDROID_RELEASE_KEY }} \
            --ks-pass pass:${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }} \
            --key-pass pass:${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }} \
            --out src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk \
            src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned.apk

      - name: Rename APK file (publish only)
        if: inputs.release
        run: |
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-signed.apk ./src-tauri/gen/android/app/build/outputs/apk/universal/release/mdns-browser-v${{ steps.get-version.outputs.current-version }}.apk

      - name: Publish (publish only)
        if: inputs.release
        uses: softprops/action-gh-release@c062e08bd532815e2082a85e87e3ef29c3e6d191 # v2
        with:
          name: mDNS-Browser Release v${{ steps.get-version.outputs.current-version }}
          tag_name: mdns-browser-v${{ steps.get-version.outputs.current-version }}
          files: |
            ./src-tauri/gen/android/app/build/outputs/apk/universal/release/mdns-browser-v${{ steps.get-version.outputs.current-version }}.apk
