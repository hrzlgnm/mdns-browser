name: Publish arch linux AUR

on:
  workflow_call:
    inputs:
      semver:
        description: The semver of the release to publish for
        type: string
        required: true

  workflow_dispatch:
    inputs:
      semver:
        description: The semver of the release to publish for
        type: string
        required: true

jobs:
  mdns-browser-bin:
    permissions:
      packages: read
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hrzlgnm/mdns-browser-arch-aur-builder:v1
    steps:
      - name: 🔄 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: 🛠️ Setup Deployment keys
        shell: bash
        run: |
          V=${{ inputs.semver }}
          chown -R runner:runner .
          su runner -c '
            set -o errexit
            mkdir -p ~/.ssh
            echo "${{ secrets.AUR_DEPLOY_KEY }}" > ~/.ssh/aur
            chmod 600 ~/.ssh/aur
            echo "Host aur.archlinux.org" >> ~/.ssh/config
            echo "  IdentityFile ~/.ssh/aur" >> ~/.ssh/config
            echo "  User aur" >> ~/.ssh/config
            ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
          '
      - name: 🔄 Clone AUR Repo
        shell: bash
        run: |
          V=${{ inputs.semver }}
          su runner -c '
            set -o errexit
            git clone --depth=1 "ssh://aur@aur.archlinux.org/mdns-browser-bin.git" ~/aur
          '
      - name: 🔍 Check version
        shell: bash
        run: |
          V=${{ inputs.semver }}
          su runner -c '
            set -o errexit
            cd ~/aur
            if [[ -f PKGBUILD ]]; then
              CURRENT_VERSION=$(source PKGBUILD && echo $pkgver)
              if [[ "$(printf "%s\n%s" "$CURRENT_VERSION" "${{ inputs.semver}}" | sort -V | head -n1)" != "$CURRENT_VERSION" ]] || [[ "$CURRENT_VERSION" == "${{ inputs.semver }}" ]]; then
                echo "New version (${{ inputs.semver }}) is not higher than the current version ($CURRENT_VERSION). Exiting."
                exit 1
              fi
            fi
          '
      - name: 🔢 Get sha256sums
        id: sha256sums
        shell: bash
        run: |
          V=${{ inputs.semver }}
          URL="https://github.com/hrzlgnm/mdns-browser/releases/download/mdns-browser-v${{ inputs.semver }}/mdns-browser_${{ inputs.semver }}_amd64.deb.sha256"
          echo "getting $URL"
          DSUM=$(curl -LfsS "$URL" | cut -f1 -d ' ')
          echo "deb-sha256=$DSUM" >> $GITHUB_OUTPUT

      - name: 🌀 Generate PKGBUILD and update
        run: |
          V="${{ inputs.semver }} ${{ steps.sha256sums.outputs.deb-sha256 }}"
          su runner -c '
            set -o errexit
            ./aur-template/generate-mdns-browser-bin.sh "${{ inputs.semver }}" "${{ steps.sha256sums.outputs.deb-sha256 }}" > ~/aur/PKGBUILD
            cd ~/aur
            if [[ -z $(git status --porcelain) ]]; then
              echo "No changes"
              exit 0
            fi
            makepkg --printsrcinfo > .SRCINFO
            makepkg
            makepkg --install
            git config user.name "hrzlgnm"
            git config user.email "hrzlgnm@users.noreply.github.com"
            git add PKGBUILD .SRCINFO
            git commit -m "New upstream release ${{ inputs.semver }}"
            git push origin master
          '
  mdns-browser:
    permissions:
      packages: read
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/hrzlgnm/mdns-browser-arch-aur-builder:v1
    steps:
      - name: 🔄 Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: 🛠️ Setup Deployment keys
        shell: bash
        run: |
          V=${{ inputs.semver }}
          chown -R runner:runner .
          su runner -c '
            set -o errexit
            mkdir -p ~/.ssh
            echo "${{ secrets.AUR_DEPLOY_KEY }}" > ~/.ssh/aur
            chmod 600 ~/.ssh/aur
            echo "Host aur.archlinux.org" >> ~/.ssh/config
            echo "  IdentityFile ~/.ssh/aur" >> ~/.ssh/config
            echo "  User aur" >> ~/.ssh/config
            ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
          '

      - name: 🔄 Clone AUR Repo
        shell: bash
        run: |
          V=${{ inputs.semver }}
          su runner -c '
            set -o errexit
            git clone --depth=1 "ssh://aur@aur.archlinux.org/mdns-browser.git" ~/aur
          '
      - name: 🔍 Check version
        shell: bash
        run: |
          V=${{ inputs.semver }}
          su runner -c '
            set -o errexit
            cd ~/aur
            if [[ -f PKGBUILD ]]; then
              CURRENT_VERSION=$(source PKGBUILD && echo $pkgver)
              if [[ "$(printf "%s\n%s" "$CURRENT_VERSION" "${{ inputs.semver}}" | sort -V | head -n1)" != "$CURRENT_VERSION" ]] || [[ "$CURRENT_VERSION" == "${{ inputs.semver }}" ]]; then
                echo "New version (${{ inputs.semver }}) is not higher than the current version ($CURRENT_VERSION). Exiting."
                exit 1
              fi
            fi
          '
      - name: 🔢 Get sha256sums
        id: sha256sums
        shell: bash
        run: |
          V=${{ inputs.semver }}
          URL="https://github.com/hrzlgnm/mdns-browser/releases/download/mdns-browser-v${{ inputs.semver }}/mdns-browser-v${{ inputs.semver }}.tar.gz.sha256"
          echo "getting $URL"
          SUM=$(curl -LfsS "$URL" | cut -f1 -d ' ')
          echo "source-sha256=$SUM" >> $GITHUB_OUTPUT

      - name: 🌀 Generate PKGBUILD and update
        run: |
          V="${{ inputs.semver }} ${{ steps.sha256sums.outputs.source-sha256}}"
          su runner -c '
            set -o errexit
            ./aur-template/generate-mdns-browser.sh "${{ inputs.semver }}" "${{ steps.sha256sums.outputs.source-sha256 }}" > ~/aur/PKGBUILD
            cd ~/aur
            if [[ -z $(git status --porcelain) ]]; then
              echo "No changes"
              exit 0
            fi
            makepkg --printsrcinfo > .SRCINFO
            makepkg
            makepkg --install                                 a
            git config user.name "hrzlgnm"
            git config user.email "hrzlgnm@users.noreply.github.com"
            git add PKGBUILD .SRCINFO
            git commit -m "New upstream version ${{ inputs.semver }}"
            git push origin master
          '
